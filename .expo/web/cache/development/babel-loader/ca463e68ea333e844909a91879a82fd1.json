{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Splax\\\\instagram\\\\components\\\\main\\\\Save.js\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport firebase from 'firebase';\n\nrequire(\"firebase/firestore\");\n\nrequire(\"firebase/firebase-storage\");\n\nexport default function Save() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      caption = _useState2[0],\n      setCaption = _useState2[1];\n\n  var uploadImage = function uploadImage() {\n    var uri, response, blob;\n    return _regeneratorRuntime.async(function uploadImage$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            uri = props.route.params.image;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(fetch(uri));\n\n          case 3:\n            response = _context.sent;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(response.blob());\n\n          case 6:\n            blob = _context.sent;\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, React.createElement(Image, {\n    source: {\n      uri: props.route.params.image\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }), React.createElement(TextInput, {\n    placeholder: \"Write a caption . . .\",\n    onChangeText: function onChangeText(caption) {\n      return setCaption(caption);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }), React.createElement(Button, {\n    title: \"Save\",\n    onPress: function onPress() {\n      return uploadImage();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/Splax/instagram/components/main/Save.js"],"names":["React","firebase","require","Save","useState","caption","setCaption","uploadImage","uri","props","route","params","image","fetch","response","blob","flex"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;AAGA,OAAOC,QAAP,MAAqB,UAArB;;AACAC,OAAO,CAAC,oBAAD,CAAP;;AACAA,OAAO,CAAC,2BAAD,CAAP;;AACA,eAAe,SAASC,IAAT,GAAgB;AAAA,kBACGC,QAAQ,CAAC,EAAD,CADX;AAAA;AAAA,MACpBC,OADoB;AAAA,MACXC,UADW;;AAG3B,MAAMC,WAAW,GAAG,SAAdA,WAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AACVC,YAAAA,GADU,GACJC,KAAK,CAACC,KAAN,CAAYC,MAAZ,CAAmBC,KADf;AAAA;AAAA,6CAGOC,KAAK,CAACL,GAAD,CAHZ;;AAAA;AAGVM,YAAAA,QAHU;AAAA;AAAA,6CAIGA,QAAQ,CAACC,IAAT,EAJH;;AAAA;AAIVA,YAAAA,IAJU;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAApB;;AAMA,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACC,MAAAA,IAAI,EAAE;AAAP,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAE;AAACR,MAAAA,GAAG,EAAEC,KAAK,CAACC,KAAN,CAAYC,MAAZ,CAAmBC;AAAzB,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,SAAD;AACI,IAAA,WAAW,EAAC,uBADhB;AAEI,IAAA,YAAY,EAAE,sBAACP,OAAD;AAAA,aAAaC,UAAU,CAACD,OAAD,CAAvB;AAAA,KAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAMI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,MAAd;AAAqB,IAAA,OAAO,EAAE;AAAA,aAAME,WAAW,EAAjB;AAAA,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,CADJ;AAWH","sourcesContent":["import React from 'react'\r\nimport { View, TextInput, Image, Button } from 'react-native'\r\n\r\nimport firebase from 'firebase'\r\nrequire(\"firebase/firestore\")\r\nrequire(\"firebase/firebase-storage\")\r\nexport default function Save() {\r\n    const [caption, setCaption] = useState(\"\")\r\n\r\n    const uploadImage = async ()=> {\r\n        const uri = props.route.params.image;\r\n    \r\n        const response = await fetch(uri);\r\n        const blob = await response.blob();\r\n    }\r\n    return (\r\n        <View style={{flex: 1}} >\r\n            <Image source={{uri: props.route.params.image}}/>\r\n            <TextInput\r\n                placeholder=\"Write a caption . . .\"\r\n                onChangeText={(caption) => setCaption(caption)}\r\n            />\r\n            <Button title=\"Save\" onPress={() => uploadImage()}/>\r\n        </View>\r\n        \r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}